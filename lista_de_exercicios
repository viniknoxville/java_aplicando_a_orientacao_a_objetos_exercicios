1. Crie uma classe Pessoa com um método que exibe "Olá, mundo!"
no console.

2. Crie uma classe Calculadora com um método que recebe um número
 como parâmetro e retorna o dobro desse número.

3. Crie uma classe Musica com atributos titulo, artista,
anoLancamento, avaliacao e numAvaliacoes, e métodos para exibir a
ficha técnica, avaliar a música e calcular a média de avaliações.

4. Crie uma classe Carro com atributos modelo, ano, cor e métodos
para exibir a ficha técnica e calcular a idade do carro.

5. Crie uma classe Aluno com atributos nome, idade, e um método para
exibir informações. Crie uma instância da classe Aluno, atribua valores
aos seus atributos e utilize o método para exibir as informações.

6. Crie uma classe ContaBancaria com os seguintes atributos: numeroConta
(privado), saldo (privado) e titular (publico). Implemente métodos getters
e setters para os atributos privados.

7. Crie uma classe IdadePessoa com os atributos privados nome e idade. Utilize
métodos getters e setters para acessar e modificar esses atributos. Adicione um
método verificarIdade que imprime se a pessoa é maior de idade ou não.

8. Desenvolva uma classe Produto com os atributos privados nome e preco. Utilize
métodos getters e setters para acessar e modificar esses atributos. Adicione um
método aplicarDesconto que recebe um valor percentual e reduz o preço do produto.

9. Desenvolva uma classe Aluno com os atributos privados nome e notas. Utilize métodos
getters e setters para acessar e modificar esses atributos. Adicione um método
calcularMedia que retorna a média das notas do aluno.

10. Desenvolva uma classe Livro com os atributos privados titulo e autor. Utilize métodos
getters e setters para acessar e modificar esses atributos. Adicione um método exibirDetalhes
que imprime o título e o autor do livro.

11. Crie uma classe Carro com métodos para representar um modelo específico ao longo de três anos.
Implemente métodos para definir o nome do modelo, os preços médios para cada ano, e calcular e
exibir o menor e o maior preço. Adicione uma subclasse ModeloCarro para criar instâncias específicas,
utilizando-a na classe principal para definir preços e mostrar informações.

12. Crie uma classe Animal com um método emitirSom(). Em seguida, crie duas subclasses: Cachorro e
Gato, que herdam da classe Animal. Adicione o método emitirSom() nas subclasses, utilizando a anotação
@Override para indicar que estão sobrescrevendo o método. Além disso, adicione métodos específicos para
cada subclasse, como abanarRabo() para o Cachorro e arranharMoveis() para o Gato.

13. Crie uma classe ContaBancaria com métodos para realizar operações bancárias como depositar(), sacar()
e consultarSaldo(). Em seguida, crie uma subclasse ContaCorrente que herda da classe ContaBancaria.
Adicione um método específico para a subclasse, como cobrarTarifaMensal(), que desconta uma tarifa mensal
da conta corrente.

14. Crie uma classe NumerosPrimos com métodos como verificarPrimalidade() e listarPrimos(). Em seguida,
crie duas subclasses, VerificadorPrimo e GeradorPrimo, que herdam da classe NumerosPrimos. Adicione um
método específico para cada uma das subclasses, como verificarSeEhPrimo() para o VerificadorPrimo e
gerarProximoPrimo() para o GeradorPrimo.

15. Crie uma classe ConversorMoeda que implementa uma interface ConversaoFinanceira com o método converterDolarParaReal()
para converter um valor em dólar para reais. A classe deve receber o valor em dólar como parâmetro.

16. Crie uma classe CalculadoraSalaRetangular que implementa uma interface CalculoGeometrico com os métodos
calcularArea() e calcularPerimetro() para calcular a área e o perímetro de uma sala retangular. A classe
deve receber altura e largura como parâmetros.

17. Crie uma classe TabuadaMultiplicacao que implementa uma interface Tabuada com o método mostrarTabuada()
para exibir a tabuada de um número. A classe deve receber o número como parâmetro.

18. Crie uma interface ConversorTemperatura com os métodos celsiusParaFahrenheit() e fahrenheitParaCelsius().
Implemente uma classe ConversorTemperaturaPadrao que implementa essa interface com as fórmulas de conversão
e exibe os resultados.
